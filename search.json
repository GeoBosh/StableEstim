[{"path":"https://geobosh.github.io/StableEstim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tarak Kharrat. Author. Georgi N. Boshnakov. Author, maintainer.","code":""},{"path":"https://geobosh.github.io/StableEstim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kharrat T, Boshnakov GN (2024). StableEstim: Estimate Four Parameters Stable Laws using Different Methods. R package version 2.3, https://github.com/GeoBosh/StableEstim (devel), https://geobosh.github.io/StableEstim/ (doc).","code":"@Manual{,   title = {StableEstim: Estimate the Four Parameters of Stable Laws using Different Methods},   author = {Tarak Kharrat and Georgi N. Boshnakov},   year = {2024},   note = {R package version 2.3, https://github.com/GeoBosh/StableEstim (devel)},   url = {https://geobosh.github.io/StableEstim/ (doc)}, }"},{"path":"https://geobosh.github.io/StableEstim/index.html","id":"installing-stableestim","dir":"","previous_headings":"","what":"Estimate the Four Parameters of Stable Laws using Different Methods","title":"Estimate the Four Parameters of Stable Laws using Different Methods","text":"latest stable version CRAN. can install development version StableEstim Github:","code":"install.packages(\"StableEstim\") library(devtools) install_github(\"GeoBosh/StableEstim\")"},{"path":"https://geobosh.github.io/StableEstim/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Estimate the Four Parameters of Stable Laws using Different Methods","text":"collection methods estimate four parameters stable distributions. package also provides functions compute characteristic functions tools run Monte Carlo simulations. main functions package StableEstim briefly described : main function: Estim() estimates parameters various methods. Also gives associated asymptotic properties estimators. estimation functions specific methods: functions called Estim() can used directly, well. methods provided far : maximum-likelihood (MLParametersEstim()), generalised method moments finite (GMMParametersEstim()) continuum moment conditions (CgmmParametersEstim()), iterative Koutrouvelis regression method (KoutParametersEstim()), fast Kogon-McCulloch method used first guess estimation (IGParametersEstim). characteristic function: characteristic function (ComplexCF()) Jacobian (jacobianComplexCF()) can computed return vector (respectively matrix) complex numbers. Monte Carlo simulation: tool run Monte Carlo simulation (Estim_Simulation()) provided can save output files /produce statistical summary. package developed Tarak Kharrat Georgi N.Boshnakov.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Best_t-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class used store result function ComputeBest_t.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Best_t-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form   new(\"Best_t\", theta, nbt, tvec, detVal, convcode, ...),   user can specify /inputs call function   ComputeBest_t.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Best_t-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"theta: Object class \"vector\"; values       4 parameters. nbt: Object class \"vector\"; number points       used minimisation. tvec: Object class \"list\"; values       best t-vectors. detVal: Object class \"vector\"; values       optimal determinant found minimisation. convcode: Convergence code.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Best_t-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"+ signature(e1 = \"Best_t\", e2 = \"Best_t\"):       sum objects class Best_t. initialize signature(.Object = \"Best_t\"):       initialise object class Best_t described . show signature(object = \"Best_t\"):       print summary object.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/CgmmParamsEstim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","title":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","text":"Estimate four parameters stable laws using generalised method   moments based continuum complex moment conditions (Cgmm)   due Carrasco Florens.  moments computed matching   characteristic function sample counterpart. resulting   (ill-posed) estimation problem solved regularisation   technique.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/CgmmParamsEstim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","text":"","code":"CgmmParametersEstim(x, type = c(\"2S\", \"IT\", \"Cue\"), alphaReg = 0.01,                     subdivisions = 50,                     IntegrationMethod = c(\"Uniform\", \"Simpson\"),                     randomIntegrationLaw = c(\"unif\", \"norm\"),                     s_min = 0, s_max = 1,                     theta0 = NULL,                     IterationControl = list(),                     pm = 0, PrintTime = FALSE,...)"},{"path":"https://geobosh.github.io/StableEstim/reference/CgmmParamsEstim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","text":"x Data used perform estimation: vector length n. type Cgmm algorithm: \"2S\" two steps GMM proposed     Hansen(1982).  \"Cue\" \"\" respectively     continuous updated iterative GMM proposed Hansen, Eaton     et Yaron (1996) adapted continuum case. alphaReg Value regularisation parameter; numeric, default = 0.01. subdivisions Number subdivisions used compute different     integrals involved computation objective function (    minimise); numeric. IntegrationMethod Numerical integration method used approximate     (vectorial) integrals. Users can choose \"Uniform\"     discretization \"Simpson\"'s rule (3-point     Newton-Cotes quadrature rule). randomIntegrationLaw Probability measure associated Hilbert space spanned     moment conditions. See Carrasco Florens (2003) details. s_min,s_max Lower Upper bounds interval     moment conditions considered; numeric. theta0 Initial guess 4 parameters values: vector length 4. IterationControl used type = \"\" type = \"Cue\" control     iterations, see Details. pm Parametrisation, integer (0 1); default: pm = 0 (Nolan's     ‘S0’ parametrisation). PrintTime Logical flag; set TRUE, estimation duration printed     screen readable format (h/min/sec). ... arguments passed optimisation function /    integration function.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/CgmmParamsEstim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","text":"moment conditions      moment conditions given :   $$g_t(X,\\theta)=g(t,X;\\theta)= e^{itX} - \\phi_{\\theta}(t)$$   one sample \\(x_1,\\dots,x_n\\) ..d realisations   random variable \\(X\\), :   $$\\hat{g}_n(t,\\theta)  = \\frac{1}{n}\\sum_{=1}^n g(t,x_i;\\theta) =  \\phi_n(t) -\\phi_\\theta(t),$$   \\(\\phi_n(t)\\) eCF associated sample   \\(x_1,\\dots,x_n\\), defined \\(\\phi_n(t)= \\frac{1}{n}     \\sum_{j=1}^n e^{itX_j}\\).      Objective function Following @@carrasco2007efficientCont, Proposition 3.4;textualStableEstim,   objective function minimise given :   $$obj(\\theta)=\\overline{\\underline{v}^{\\prime}}(\\theta)[\\alpha_{Reg} \\mathcal{}_n+C^2]^{-1}\\underline{v}(\\theta)$$   : \\(\\underline{v} = [v_1,\\ldots,v_n]^{\\prime}\\); \\(v_i(\\theta) \t= \\int_I \\overline{g_i}(t;\\hat{\\theta}^1_n) \\hat{g}(t;\\theta) \\pi(t) dt\\). \\(I_n\\) identity matrix size \\(n\\). \\(C\\) \\(n \\times n\\) matrix \\((,j)\\)th       element given       \\(c_{ij} = \\frac{1}{n-4}\\int_I \t\\overline{g_i}(t;\\hat{\\theta}^1_n) g_j(t;\\hat{\\theta}^1_n) \t\\pi(t) dt\\). compute \\(C\\) \\(v_i()\\) use function   IntegrateRandomVectorsProduct.      IterationControl      type = \"\" type = \"Cue\", user can control   iteration using argument IterationControl,   list contains following elements: NbIter: maximum number iterations.       loop stops NBIter reached; default = 10. PrintIterlogical: set TRUE values       current parameter estimates printed screen       iteration; default = TRUE. RelativeErrMax: loop stops relative error       two consecutive estimation steps smaller       RelativeErrMax; default = 1e-3.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/CgmmParamsEstim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","text":"list following elements: Estim output optimisation function, duration estimation duration numerical format, method character describing method used.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/CgmmParamsEstim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","text":"carrasco2000generalizationStableEstim carrasco2002efficientStableEstim carrasco2003asymptoticStableEstim carrasco2007efficientContStableEstim carrasco2010efficientStableEstim","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/CgmmParamsEstim.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","text":"nlminb used minimise Cgmm objective function.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/CgmmParamsEstim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate parameters of stable laws using a Cgmm method — CgmmParametersEstim","text":"","code":"## general inputs theta <- c(1.45, 0.55, 1, 0) pm <- 0 set.seed(2345) x <- rstable(50, theta[1], theta[2], theta[3], theta[4], pm)  ## GMM specific params alphaReg <- 0.01 subdivisions <- 20 randomIntegrationLaw <- \"unif\" IntegrationMethod <- \"Uniform\"  ## Estimation twoS <- CgmmParametersEstim(x = x, type = \"2S\", alphaReg = alphaReg,                            subdivisions = subdivisions,                            IntegrationMethod = IntegrationMethod,                            randomIntegrationLaw = randomIntegrationLaw,                            s_min = 0, s_max = 1, theta0 = NULL,                            pm = pm, PrintTime = TRUE) #> [1] \"CgmmParametersEstim_2S :duration= 0  h, 0  min, 1  sec. \" twoS #> $Estim #> $Estim$par #> [1]  1.3193378  0.6995646  0.7875786 -0.1791584 #>  #> $Estim$all #> $Estim$all$par #>      alpha       beta      gamma      delta  #>  1.3193378  0.6995646  0.7875786 -0.1791584  #>  #> $Estim$all$objective #> [1] 0.02720932 #>  #> $Estim$all$convergence #> [1] 0 #>  #> $Estim$all$iterations #> [1] 9 #>  #> $Estim$all$evaluations #> function gradient  #>       13       44  #>  #> $Estim$all$message #> [1] \"both X-convergence and relative convergence (5)\" #>  #>  #>  #> $duration #> [1] 1.101 #>  #> $method #> [1] \"Cgmm_type=2S_alphaReg=0.01_OptimAlgo=nlminb_subdivisions=20_IntegrationMethod=Uniform_randomIntegrationLaw=unif_s_min=0_s_max=1\" #>"},{"path":"https://geobosh.github.io/StableEstim/reference/ComplexCF.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the characteristic function of stable laws — ComplexCF","title":"Compute the characteristic function of stable laws — ComplexCF","text":"Theoretical characteristic function (CF) stable laws   parametrisation ‘S0’ ‘S1’. See Nolan (2013)   details.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComplexCF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the characteristic function of stable laws — ComplexCF","text":"","code":"ComplexCF(t, theta, pm = 0)"},{"path":"https://geobosh.github.io/StableEstim/reference/ComplexCF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the characteristic function of stable laws — ComplexCF","text":"t vector (real) numbers CF evaluated; numeric. theta vector parameters stable law; vector length 4. pm parametrisation, integer (0 1); default: pm = 0     (Nolan's ‘S0’ parametrisation).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComplexCF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the characteristic function of stable laws — ComplexCF","text":"details different parametrisation CF, see   Nolan(2012).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComplexCF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the characteristic function of stable laws — ComplexCF","text":"vector complex numbers dimension length(t).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComplexCF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute the characteristic function of stable laws — ComplexCF","text":"nolan:2012StableEstim","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/ComplexCF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the characteristic function of stable laws — ComplexCF","text":"","code":"## define the parameters nt <- 10 t <- seq(0.1, 3, length.out = nt) theta <- c(1.5, 0.5, 1, 0) pm <- 0  ## Compute the characteristic function CF <- ComplexCF(t = t, theta = theta, pm = pm) CF #>  [1] 0.968305811+0.033117936i 0.757986409+0.056143306i 0.525387123+0.026851945i #>  [4] 0.332271933-0.005812349i 0.193104300-0.024061787i 0.102956859-0.027785107i #>  [7] 0.049972446-0.023103095i 0.021746183-0.015850609i 0.008231545-0.009409216i #> [10] 0.002521428-0.004930514i"},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeBest_t.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo simulation to investigate the optimal number of points to use in the moment conditions — ComputeBest_t","title":"Monte Carlo simulation to investigate the optimal number of points to use in the moment conditions — ComputeBest_t","text":"Runs Monte Carlo simulation different values \\(\\alpha\\)   \\(\\beta\\) computes specified number t-points minimises   determinant asymptotic covariance matrix.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeBest_t.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo simulation to investigate the optimal number of points to use in the moment conditions — ComputeBest_t","text":"","code":"ComputeBest_t(AlphaBetaMatrix = abMat, nb_ts = seq(10, 100, 10),               alphaReg = 0.001, FastOptim = TRUE, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeBest_t.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo simulation to investigate the optimal number of points to use in the moment conditions — ComputeBest_t","text":"AlphaBetaMatrix values parameter \\(\\alpha\\) \\(\\beta\\)     simulate data. default, values \\(\\gamma\\)     \\(\\delta\\) set 1 0, respectively;     \\(2 \\times  n\\) matrix. nb_ts vector numbers t-points use minimisation;     default = seq(10, 100, 10). alphaReg value regularisation parameter; numeric, default = 0.001. FastOptim Logical flag; set TRUE, optim \"Nelder-Mead\" method     used (fast accurate). Otherwise, nlminb used     (accurate slower). ... arguments pass optimisation function.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeBest_t.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo simulation to investigate the optimal number of points to use in the moment conditions — ComputeBest_t","text":"list containing slots class Best_t-class   corresponding one value parameters \\(\\alpha\\)   \\(\\beta\\).","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeBest_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Monte Carlo simulation to investigate the optimal \\(\\tau\\) — ComputeBest_tau","title":"Run Monte Carlo simulation to investigate the optimal \\(\\tau\\) — ComputeBest_tau","text":"Runs Monte Carlo simulation investigate optimal number   points use one reduced spacing schemes considered.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeBest_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Monte Carlo simulation to investigate the optimal \\(\\tau\\) — ComputeBest_tau","text":"","code":"ComputeBest_tau(AlphaBetaMatrix = abMat, nb_ts = seq(10, 100, 10),                 tScheme = c(\"uniformOpt\", \"ArithOpt\"),                 Constrained = TRUE, alphaReg = 0.001, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeBest_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Monte Carlo simulation to investigate the optimal \\(\\tau\\) — ComputeBest_tau","text":"AlphaBetaMatrix values parameter \\(\\alpha\\) \\(\\beta\\)     simulate data. default, values \\(\\gamma\\)     \\(\\delta\\) set 1 0, respectively;     \\(2 \\times n\\) matrix. nb_ts vector number t-points use minimisation;     default = seq(10,100,10). tScheme scheme used select points moment conditions     evaluated, one \"uniformOpt\" (uniform optimal placement)     \"ArithOpt\" (arithmetic optimal placement). See function     GMMParametersEstim. Constrained logical flag: set True, lower upper bands computed     discussed function GMMParametersEstim. alphaReg value regularisation parameter; numeric, default = 0.001. ... arguments pass optimisation function.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeBest_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Monte Carlo simulation to investigate the optimal \\(\\tau\\) — ComputeBest_tau","text":"list containing slots class Best_t-class   corresponding one value parameters \\(\\alpha\\)   \\(\\beta\\).","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeDuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Duration — ComputeDuration","title":"Duration — ComputeDuration","text":"Compute duration 2 time points.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeDuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Duration — ComputeDuration","text":"","code":"ComputeDuration(t_init, t_final, OneNumber = FALSE)"},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeDuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Duration — ComputeDuration","text":"t_init Starting time; numeric. t_final Final time; numeric. OneNumber Logical flag; set TRUE, duration seconds     returned. Otherwise, vector length 3 computed     representing time h/min/sec.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeDuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Duration — ComputeDuration","text":"numeric length 1 3 depending value   OneNumber flag.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeDuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Duration — ComputeDuration","text":"","code":"ti <- getTime_() for (i in 1:100) x <- i*22.1 tf <- getTime_() ComputeDuration(ti,tf) #>   h.elapsed min.elapsed sec.elapsed  #>           0           0           0"},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeFirstRootRealeCF.html","id":null,"dir":"Reference","previous_headings":"","what":"First root of the empirical characteristic function — ComputeFirstRootRealeCF","title":"First root of the empirical characteristic function — ComputeFirstRootRealeCF","text":"Computes first root real part empirical   characteristic function.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeFirstRootRealeCF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First root of the empirical characteristic function — ComputeFirstRootRealeCF","text":"","code":"ComputeFirstRootRealeCF(x, ..., tol = 0.001, maxIter = 100,                         lowerBand = 1e-04, upperBand = 30)"},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeFirstRootRealeCF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First root of the empirical characteristic function — ComputeFirstRootRealeCF","text":"x data used perform estimation: vector length n. ... arguments pass optimisation function. tol tolerance accept solution; default = 1e-3. maxIter maximum number iteration Welsh algorithm; default = 100. lowerBand lower band domain graphical seach performed;     default = 1e-4. upperBand Lower band domain graphical seach performed;     default = 30.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeFirstRootRealeCF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"First root of the empirical characteristic function — ComputeFirstRootRealeCF","text":"Welsh algorithm first applied. fails provide   satisfactory value (< tol), graphical/ numerical approach   used. first plot real part eCF vs t order   determine first zero directly use initial guess   numerical minimisation routine.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeFirstRootRealeCF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"First root of the empirical characteristic function — ComputeFirstRootRealeCF","text":"numeric: first zero real part eCF.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeFirstRootRealeCF.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"First root of the empirical characteristic function — ComputeFirstRootRealeCF","text":"welsh1986implementingStableEstim","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeFirstRootRealeCF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"First root of the empirical characteristic function — ComputeFirstRootRealeCF","text":"","code":"set.seed(345) x <- rstable(500, 1.5, 0.5) ComputeFirstRootRealeCF(x) #> [1] 2.302698"},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeStatObjectFromFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse an output file to create a summary object (list) — ComputeStatObjectFromFiles","title":"Parse an output file to create a summary object (list) — ComputeStatObjectFromFiles","text":"Parses file saved Estim_Simulation re-creates   summary list identical one produced   Estim_Simulation StatSummary set TRUE.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeStatObjectFromFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse an output file to create a summary object (list) — ComputeStatObjectFromFiles","text":"","code":"ComputeStatObjectFromFiles(files, sep_ = \",\",                            FctsToApply = StatFcts,                            headers_=TRUE,readSizeFrom=1,                            CheckMat=TRUE,                            tolFailCheck=tolFailure,                            MCparam=1000,...)"},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeStatObjectFromFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse an output file to create a summary object (list) — ComputeStatObjectFromFiles","text":"files character vector containing files name parsed.     See Details. sep_ field separator character used function read.csv()     write.table().  Values line file     separated character. can also character vector (    length files) different separators used     file; default: \",\". FctsToApply functions used produce statistical summary.     See Estim_Simulation; character vector. headers_ boolean vector length 1 length files     indicate file header argument considered     . passed function read.csv(). readSizeFrom index file sample sizes determined;     default 1 (first file files). CheckMat logical flag: set TRUE, estimation declared failed     squared error estimation larger     tolFailCheck; default TRUE. tolFailCheck tolerance squared error estimation declared     failed; default = 1.5. MCparam number Monte Carlo simulation couple parameter,     default = 1000; integer. ... arguments passed estimation function.     See Estim_Simulation.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeStatObjectFromFiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse an output file to create a summary object (list) — ComputeStatObjectFromFiles","text":"sample sizes assumed files also assume   different set parameters (alpha,beta) within   file (one one ). function particularly useful simulations run   parallel different computers/CPUs output files   collected afterwards. function also used create Latex   summary table: see TexSummary. examples provided example folder.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ComputeStatObjectFromFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse an output file to create a summary object (list) — ComputeStatObjectFromFiles","text":"list length 4 containing summary matrix object   associated parameter.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/ConcatFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenates output files. — ConcatFiles","title":"Concatenates output files. — ConcatFiles","text":"Creates unique file concatenating several output files associated   one set parameters.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ConcatFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenates output files. — ConcatFiles","text":"","code":"ConcatFiles(files, sep_ = \",\", outfile, headers_ = TRUE,             DeleteIfExists=TRUE)"},{"path":"https://geobosh.github.io/StableEstim/reference/ConcatFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenates output files. — ConcatFiles","text":"files character Vector containing files name concatenated.     See details. sep_ Field separator character used function     read.csv() write.table().     Values line file separated     character; can also vector character     (length files) different separators useed     file; default: \",\" outfile Name output file; character headers_ Vector boolean length 1 length files     indicate file header argument considered     . passed function read.csv(). DeleteIfExists outfile exists, deleted     recreated (-written).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ConcatFiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Concatenates output files. — ConcatFiles","text":"files concatenated related set   parameters alpha beta. function stops one   file contains 2 () different set parameters (  function compares values columns 1 2 row row)   set parameters within one file different one   files.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/ConcatFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenates output files. — ConcatFiles","text":"Returns output file outfile saved working directory.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/Estim-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Class ","title":"Class ","text":"Class storing results estimating parameters stable   laws, output function Estim().","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim-class.html","id":"objects-from-the-class","dir":"Reference","previous_headings":"","what":"Objects from the Class","title":"Class ","text":"Objects can created calls form new(\"Estim\", par,   ...).  Users can provide () inputs stated   create object class call function Estim   appropriate arguments.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class ","text":"par: numeric(4), values 4 estimated parameters. par0: numeric(4), initial values 4 parameters. vcov: object class \"matrix\" (4 x 4),       representing covariance matrix estimated parameters. confint: object class \"matrix\" (4 x 4),       representing confidence interval computed       specific level (attribute object). data: numeric(), data used compute estimates. sampleSize: numeric(1), length data. others: list(),       information estimation method. duration: numeric(1), duration seconds. failure: numeric(1),       represents status procedure: 0 failure 1 success. method: Object class \"character\",       description parameters used estimation.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class ","text":"initialize signature(.Object = \"Estim\"):       creates object class using inputs described . show signature(object = \"Estim\"):       summarised print object.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/Estim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate parameters of stable laws — Estim","title":"Estimate parameters of stable laws — Estim","text":"Estimates four parameters stable distributions using one   methods implemented StableEstim. main user-level   function individul methods available also separate   functions.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate parameters of stable laws — Estim","text":"","code":"Estim(EstimMethod = c(\"ML\", \"GMM\", \"Cgmm\",\"Kout\"), data, theta0 = NULL,       ComputeCov = FALSE, HandleError = TRUE, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/Estim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate parameters of stable laws — Estim","text":"EstimMethod Estimation method used, one \"ML\" (maximum     likelihood, default), \"GMM\" (generalised method moment finite     moment conditions), \"Cgmm\" (GMM continuum moment     conditions), \"Kout\" (Koutrouvelis regression method). data Data used perform estimation, numeric vector. theta0 Initial values 4 parameters. NULL (default),     initial values computed using fast Kogon-McCulloch method,     see IGParametersEstim; vector length 4. ComputeCov Logical flag: TRUE, asymptotic covariance matrix (4x4)     computed (except Koutrouvelis method). HandleError Logical flag: TRUE error occurs     estimation procedure, computation carry NA     returned. Useful Monte Carlo simulations, see     Estim_Simulation. ... arguments passed estimation function,     asymptotic confidence level, see Details.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate parameters of stable laws — Estim","text":"Estim main estimation function package   StableEstim. function used priority estimation purpose   provides information estimator. However, user needs   pass appropriate parameters selected method   .... See documentation selected method. Asymptotic Confidence Intervals:   normal asymptotic confidence intervals (CI) computed.   user can set level confidence inputing   level argument (\"\\dots\"); default   level=0.95. theoretical justification asymptotic normal   CI can found references individual methods. Note   CI's computed Koutrouvelis regression method.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate parameters of stable laws — Estim","text":"object class Estim, see Estim-class   details","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/Estim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate parameters of stable laws — Estim","text":"","code":"## general inputs theta <- c(1.45, 0.55, 1, 0) pm <- 0 set.seed(2345) x <- rstable(200, theta[1], theta[2], theta[3], theta[4], pm)  objKout <- Estim(EstimMethod = \"Kout\", data = x, pm = pm,                       ComputeCov = FALSE, HandleError = FALSE,                       spacing = \"Kout\")"},{"path":"https://geobosh.github.io/StableEstim/reference/Estim_Simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Monte Carlo simulation — Estim_Simulation","title":"Monte Carlo simulation — Estim_Simulation","text":"Runs Monte Carlo simulation selected estimation method.   function can save file produce statistical summary.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim_Simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monte Carlo simulation — Estim_Simulation","text":"","code":"Estim_Simulation(AlphaBetaMatrix = abMat, SampleSizes = c(200, 1600),                  MCparam = 100, Estimfct = c(\"ML\", \"GMM\", \"Cgmm\",\"Kout\"),                  HandleError = TRUE, FctsToApply = StatFcts,                  saveOutput = TRUE, StatSummary = FALSE,                  CheckMat = TRUE, tolFailCheck = tolFailure,                  SeedOptions=NULL, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/Estim_Simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monte Carlo simulation — Estim_Simulation","text":"AlphaBetaMatrix values parameter \\(\\alpha\\) \\(\\beta\\)     simulate data. default, values \\(\\gamma\\)     \\(\\delta\\) set 1 0, respectively;     \\(2 \\times n\\) matrix. SampleSizes sample sizes used simulate data. default, use     200 (small sample size) 1600 (large sample size);     vector integers. MCparam Number Monte Carlo simulation couple parameter,     default = 100; integer number. Estimfct estimation function used, one     \"ML\", \"GMM\", \"Cgmm\" \"Kout\". HandleError logical flag: set TRUE, simulation stop     error estimation function encountered. vector (size     4) NA saved simulation carries . See     details. FctsToApply functions used produce statistical summary. See details;     character vector. saveOutput logical flag: set TRUE, csv file (couple     parameters \\(\\alpha\\) \\(\\beta\\)) estimation     information saved current directory. See Details. StatSummary logical flag: set TRUE, statistical summary (using     FctsToApply) returned. See Details. CheckMat logical flag: set TRUE, estimation declared failed     squared error estimation larger     tolFailCheck; default = TRUE. tolFailCheck tolerance squared error estimation declared     failed; default = 1.5. SeedOptions list control seed generation. See Details. ... arguments passed estimation function.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim_Simulation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Monte Carlo simulation — Estim_Simulation","text":"Error Handling      advisable set TRUE user planning launch   long simulations prevent procedure stopping   error occurs one sample data. estimation function produce   vector NA estimated parameters related (error   generating) sample data move next Monte Carlo step.      Statistical summary      function able produce statistical summary Monte   Carlo simulation parameter (slices list). slice   matrix rows represents true values   parameters columns statistical information.      cases, following quantities computed: sample size: sample size used produce simulated data. alphaT, betaT: true values parameters. failure: number times procedure failed produce relevant       estimation. time: average running time seconds estimation procedure Besides, (vector character) FctsToApply controls   quantities computed providing name   function object applied vector estimated   parameters. signature function form   fctName = function(p,...){...}, p vector   (length(p) = MCparam) parameter estimates ...   extra arguments passed function. default, functions StatFcts applied   user can pass functions providing names argument   FctsToApply definitions global environment. Note CheckMat set TRUE, estimation   considered failed squared error (first 2 parameters   alpha beta) larger tolFailCheck. Output file Setting saveOutput TRUE side effect saving   csv file working directory. file   MCparam * length(SampleSizes) lines columns   : alphaT, betaT: true values parameters. data size: sample size used generate simulated data. seed: seed value used generate simulated data. alphaE, betaE, gammaE, deltaE: estimates 4 parameters. failure: binary: 0 success, 1 failure. time: estimation running time seconds. file name informative let user identify values   true parameters, MC parameters, well options   selected estimation method. csv file updated MC estimation, useful   simulation stops finishes. Besides, using   check-pointing mechanism explained , simulation can re-start   stopped. Check-pointing.   Checkpointing act saving enough program state results   far calculated computation can stopped restarted.   way save text file useful information   state estimation. text file updated   MC iteration read beginning function   Estim_Simulation allow simulation re-start   stopped. file deleted end simulation   procedure. SeedOptions.   Users want control seed generation can ignore   argument (default value NULL). argument can   useful one wants cut simulation (even one parameter   value) pieces. case, user can control part   seed vector use. MCtot: total values MC simulations entire process. seedStart: starting index seed vector. vector extracted       size MCparam.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/Estim_Simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monte Carlo simulation — Estim_Simulation","text":"StatSummary set TRUE, list 4 components   (corresponding 4 parameters) returned. component   matrix. SaveOutput set TRUE, csv file saved   nothing returned (StatSummary FALSE).    FALSE, function stops.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/GMMParametersEstim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","title":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","text":"Estimate parameters stable laws using generalised method     moments (GMM) finite number moment conditions. uses     regularisation technique make method robust (    number moment condition large) allows different schemes     select moment conditions computed.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/GMMParametersEstim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","text":"","code":"GMMParametersEstim(x, algo = c(\"2SGMM\", \"ITGMM\", \"CueGMM\"),                    alphaReg = 0.01,                    regularization = c(\"Tikhonov\", \"LF\", \"cut-off\"),                    WeightingMatrix = c(\"OptAsym\", \"DataVar\", \"Id\"),                    t_scheme = c(\"equally\", \"NonOptAr\", \"uniformOpt\",                                 \"ArithOpt\", \"VarOpt\", \"free\"),                    theta0 = NULL,                    IterationControl = list(),                    pm = 0, PrintTime = FALSE, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/GMMParametersEstim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","text":"x data used perform estimation: vector length n. algo GMM algorithm: \"2SGMM\" two step GMM proposed     Hansen(1982). \"CueGMM\" \"ITGMM\" respectively     continuous updated iterative GMM proposed Hansen,     Eaton et Yaron (1996) adapted continuum case. alphaReg value regularisation parameter; numeric, default = 0.01. regularization regularization scheme used, one \"Tikhonov\"     (Tikhonov), \"LF\" (Landweber-Fridmann) \"cut-\"     (spectral cut-). See RegularisedSol. WeightingMatrix type weighting matrix used compute objective function, one     \"OptAsym\" (optimal asymptotic), \"DataVar\" (    data driven) \"Id\" (identity matrix). See Details. t_scheme scheme used select points moment conditions     evaluated, one \"equally\" (equally placed),     \"NonOptAr\" (non optimal arithmetic placement),     \"uniformOpt\" (uniform optimal placement), \"ArithOpt\"     (arithmetic optimal placement), \"Var Opt\" (optimal variance     placement) \"free\" (users need pass set     points ...). See Details. theta0 initial guess 4 parameters values: NULL,     Kogon-McCulloch method called, see     IGParametersEstim; vector length 4. IterationControl used type = \"\" type = \"Cue\" control     iterations. See Details. pm parametrisation, integer (0 1); default: pm = 0     (Nolan's ‘S0’ parametrisation). PrintTime logical flag; set TRUE, estimation duration printed     screen readable format (h/min/sec). ... arguments pass regularisation function,     optimisation function selection scheme (including     function finds first zero eCF). See Details.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/GMMParametersEstim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","text":"moment conditions moment conditions given :   $$g_t(X,\\theta) = g(t,X;\\theta)= e^{itX} - \\phi_{\\theta}(t)$$   one sample \\(x_1,\\dots,x_n\\) ..d realisations   random variable \\(X\\), :   $$\\hat{g}_n(t,\\theta)  = \\frac{1}{n}\\sum_{=1}^n g(t,x_i;\\theta) =     \\phi_n(t) -\\phi_\\theta(t),$$   \\(\\phi_n(t)\\) eCF associated sample   \\(x_1,\\dots,x_n\\), defined   \\(\\phi_n(t)= \\frac{1}{n} \\sum_{j=1}^n e^{itX_j}\\). Objective function $$obj{\\theta} =     < K^{-1/2} \\hat{g}_n(.;\\theta),K^{-1/2}\\hat{g}_n(.;\\theta)>,$$   \\(K^{-1}f\\) denotes solution \\(\\varphi\\) (  exists) equation \\(K \\varphi=f\\)   \\(K^{-1/2}=(K^{-1})^{1/2}\\).  optimal choice Weighting   operator K (matrix GMM case) estimation discussed   Hansen (1982). Weighting operator (Matrix)  OptAsym: optimal asymptotic choice described Hansen.       expression components matrix found       example Feuerverger McDunnough (1981b). DataVar: covariance matrix data provided. Id: identity matrix. t-scheme One important features method allows   user choose place points moment conditions   evaluated. general rule users can provide   set points (option \"free\") choose one   schemes. latter case need specify number   points nb_t argument \"\\dots\" eventually   lower upper limit (setting Constrained FALSE   providing min_t max_t) non-optimised case.   one optimised cases selected, setting Constrained   FALSE constrain choice \\(\\tau\\), see .  mean   optimised set point, set minimises (determinant)   asymptotic covariance matrix suggested Schmidt (1982)   Besbeas Morgan (2008). 6 options implemented: \"equally\": equally placed points [min_t,max_t].       provided, user's min_t max_t used (      Coinstrained = FALSE).  Otherwise, eps       used instead (first zero       eCF). \"NonOptAr\": non optimal arithmetic placement: \\(t_j =       \\frac{j(j+1)}{nbt(nbt+1)}(max-eps); j=1,\\dots,nbt\\),       \\(max\\) upper band set points selected       discussed . \"uniformOpt\": uniform optimal placement: \\(t_j=j \\tau, j=1,\\dots, nbt\\) \"ArithOpt\": arithmetic optimal placement: \\(t_j=j(j+1) \\tau, j=1,\\dots nbt\\) \"Var Opt\": optimal variance placement explained . \"free\": user needs pass set points \"\\dots\". \"ArithOpt\" \"uniformOpt\" schemes,   function minimise seen function real parameter   \\(\\tau\\) instead vectorial optimisition   \"Var Opt\" case. latter case, one can choose   fast (less accurate) optimisation routine slow (  accurate) one setting FastOptim flag desired   value. IterationControl type = \"\" type = \"Cue\" user can control   iteration setting list IterationControl   contains following elements: NbIter: maximum number iteration. loop stops NBIter       reached; default = 10. PrintIterlogical: set TRUE, value current parameter estimation       printed screen iteration; default = TRUE. RelativeErrMax: loop stops relative error two consecutive       estimation steps smaller RelativeErrMax; default =       1e-3.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/GMMParametersEstim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","text":"list following elements: Estim output optimisation function. duration estimation duration numerical format. method character describing method used. tEstim final set points selected estimation. relevant     one optimisation scheme selected.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/GMMParametersEstim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","text":"Hansen LP (1982). “Large sample properties generalized method moments estimators.” Econometrica: Journal Econometric Society, pp. 1029–1054. Hansen LP, Heaton J Yaron (1996). “Finite-sample properties alternative GMM estimators.” Journal Business & Economic Statistics, 14(3), pp. 262–280. Feuerverger McDunnough P (1981). “efficient inference symmetric stable laws processes.” Statistics Related Topics, 99, pp. 109–112. Feuerverger McDunnough P (1981). “Fourier methods inference.” Journal American Statistical Association, 76(374), pp. 379–387. Schmidt P (1982). “improved version Quandt-Ramsey MGF estimator mixtures normal distributions switching regressions.” Econometrica: Journal Econometric Society, pp. 501–516. Besbeas P Morgan B (2008). “Improved estimation stable laws.” Statistics Computing, 18(2), pp. 219–231.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/GMMParametersEstim.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","text":"nlminb used minimisation GMM objective   funcion compute \\(tau\\) \"uniformOpt\"   \"ArithOpt\" schemes. \"Var Opt\" scheme,   optim preferred. routines selected   running different tests using summary table produced   package optimx comparing performance different   optimisation methods.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/GMMParametersEstim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate parameters of stable laws using a GMM method — GMMParametersEstim","text":"","code":"## General data theta <- c(1.5, 0.5, 1, 0) pm <- 0 set.seed(345); x <- rstable(100, theta[1], theta[2], theta[3], theta[4], pm) ##---------------- 2S free ---------------- ## method specific arguments regularization <- \"cut-off\" WeightingMatrix <- \"OptAsym\" alphaReg <- 0.005 t_seq <- seq(0.1, 2, length.out = 12)  ## If you are just interested by the value ## of the 4 estimated parameters t_scheme = \"free\"  algo = \"2SGMM\" suppressWarnings(GMMParametersEstim(     x = x, algo = algo, alphaReg = alphaReg,      regularization = regularization,      WeightingMatrix = WeightingMatrix,      t_scheme = t_scheme,      pm = pm, PrintTime = TRUE, t_free = t_seq)) #> [1] \"GMMParametersEstim_2SGMM_free :duration= 0  h, 0  min, 0  sec. \" #> $Estim #> $Estim$par #>      alpha                 gamma      delta  #>  1.4357577  0.8210212  1.0040717 -0.1286401  #>  #> $Estim$objective #> [1] 0.1689458 #>  #> $Estim$convergence #> [1] 0 #>  #> $Estim$iterations #> [1] 9 #>  #> $Estim$evaluations #> function gradient  #>       10       56  #>  #> $Estim$message #> [1] \"relative convergence (4)\" #>  #>  #> $duration #> elapsed  #>   0.143  #>  #> $method #> [1] \"2SGMM_nb_t=12_alphaReg=0.005_regularization=cut-off_WeightingMatrix=OptAsym_t_scheme=free_OptimAlgo=nlminb\" #>  #> $tEstim #>  [1] 0.1000000 0.2727273 0.4454545 0.6181818 0.7909091 0.9636364 1.1363636 #>  [8] 1.3090909 1.4818182 1.6545455 1.8272727 2.0000000 #>   ## algo = \"CueGMM\" GMMParametersEstim(     x = x, algo = \"CueGMM\", alphaReg = alphaReg,      regularization = regularization,      WeightingMatrix = WeightingMatrix,      t_scheme = t_scheme,      pm = pm, PrintTime = TRUE, t_free = t_seq) #> [1] \"---------------iteration  0 / 10 ------------------------ ( 1.41379384682666 , 0.999 , 1.03766143506284 , -0.148849418054529 )\" #>   #> [1] \"---------------iteration  1 / 10 ------------------------ ( 1.41379384682666 , 0.999 , 1.03766143506284 , -0.148849418054529 )\" #>   #> [1] \"GMMParametersEstim_CueGMM_free :duration= 0  h, 0  min, 1  sec. \" #> $Estim #> $Estim$par #>      alpha                 gamma      delta  #>  1.4137938  0.9990000  1.0376614 -0.1488494  #>  #> $Estim$objective #> [1] 0.05112931 #>  #> $Estim$convergence #> [1] 0 #>  #> $Estim$iterations #> [1] 1 #>  #> $Estim$evaluations #> function gradient  #>        2        4  #>  #> $Estim$message #> [1] \"both X-convergence and relative convergence (5)\" #>  #>  #> $duration #> elapsed  #>   0.853  #>  #> $method #> [1] \"CueGMM_nb_t=12_alphaReg=0.005_regularization=cut-off_WeightingMatrix=OptAsym_t_scheme=free_OptimAlgo=nlminb\" #>  #> $tEstim #>  [1] 0.1000000 0.2727273 0.4454545 0.6181818 0.7909091 0.9636364 1.1363636 #>  [8] 1.3090909 1.4818182 1.6545455 1.8272727 2.0000000 #>"},{"path":"https://geobosh.github.io/StableEstim/reference/IGParametersEstim.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate parameters of stable laws by Kogon and McCulloch methods — IGParametersEstim","title":"Estimate parameters of stable laws by Kogon and McCulloch methods — IGParametersEstim","text":"Kogon regression method used together McCulloch quantile   method provide initial estimates parameters stable   distributions.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/IGParametersEstim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate parameters of stable laws by Kogon and McCulloch methods — IGParametersEstim","text":"","code":"IGParametersEstim(x, pm = 0, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/IGParametersEstim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate parameters of stable laws by Kogon and McCulloch methods — IGParametersEstim","text":"x data used perform estimation: vector length n. pm parametrisation, integer (0 1); default: pm = 0     (Nolan's ‘S0’ parametrisation). ... arguments. Currently used.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/IGParametersEstim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate parameters of stable laws by Kogon and McCulloch methods — IGParametersEstim","text":"parameters \\(\\gamma\\) \\(\\delta\\) estimated using   McCulloch(1986) quantile method fBasics. data   rescaled using estimates used perform Kogon   regression method estimate \\(\\alpha\\) \\(\\beta\\).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/IGParametersEstim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate parameters of stable laws by Kogon and McCulloch methods — IGParametersEstim","text":"vector length 4 containing estimates 4 parameters.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/IGParametersEstim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimate parameters of stable laws by Kogon and McCulloch methods — IGParametersEstim","text":"Kogon SM Williams DB (1998). “Characteristic function based estimation stable distribution parameters.” practical guide heavy tailed data, pp. 311–335.     McCulloch JH (1986). “Simple consistent estimators stable distribution parameters.” Communications Statistics-Simulation Computation, 15(4), pp. 1109–1136.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/IGParametersEstim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate parameters of stable laws by Kogon and McCulloch methods — IGParametersEstim","text":"","code":"x <- rstable(200, 1.2, 0.5, 1, 0, pm = 0) IGParametersEstim(x, pm = 0) #>     alpha      beta     gamma     delta  #> 1.1843062 0.5841752 0.9112995 0.0107126"},{"path":"https://geobosh.github.io/StableEstim/reference/IntegrateRandomVectorsProduct.html","id":null,"dir":"Reference","previous_headings":"","what":"Integral outer product of random vectors — IntegrateRandomVectorsProduct","title":"Integral outer product of random vectors — IntegrateRandomVectorsProduct","text":"Computes integral outer product two possibly complex random   vectors.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/IntegrateRandomVectorsProduct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integral outer product of random vectors — IntegrateRandomVectorsProduct","text":"","code":"IntegrateRandomVectorsProduct(f_fct, X, g_fct, Y, s_min, s_max,                               subdivisions = 50,                               method = c(\"Uniform\", \"Simpson\"),                               randomIntegrationLaw = c(\"norm\",\"unif\"),                               ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/IntegrateRandomVectorsProduct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integral outer product of random vectors — IntegrateRandomVectorsProduct","text":"f_fct function object signature f_fct=function(s,X)     returns matrix \\(ns \\times nx\\) nx=length(X)     ns=length(s); s points integrand     evaluated. X random vector function f_fct evaluated. See     Details. g_fct function object signature g_fct=function(s,Y)     returns matrix \\(ns \\times ny\\) ny=length(Y)     ns=length(s); s points integrand     evaluated. Y random vector function g_fct evaluated. See     Details. s_min,s_max limits integration. finite. subdivisions maximum number subintervals. method numerical integration rule, one \"uniform\" (fast)     \"Simpson\" (accurate quadratic rule). randomIntegrationLaw Random law pi(s) applied Random product vector, see     Details. Choices \"unif\" (uniform) \"norm\"     (normal distribution). ... arguments pass random integration law. Mainly, mean     (mu) standard deviation (sd) normal law.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/IntegrateRandomVectorsProduct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integral outer product of random vectors — IntegrateRandomVectorsProduct","text":"function computes \\(nx \\times ny\\) matrix \\(C =   \\int_{s_{min}}^{s_{max}} f_s(X) g_s(Y) \\pi(s) ds\\), one   used objective function Cgmm method. essentially   outer product multiplication replaced integration. function R compute vectorial integration   computing \\(C\\) element element using integrate may   slow length(X) (length(y)) large. function allows complex vectors integrands.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/IntegrateRandomVectorsProduct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integral outer product of random vectors — IntegrateRandomVectorsProduct","text":"\\(nx \\times ny\\) matrix \\(C\\) elements:   $$c_{ij} =     \\int_{s_{min}}^{s_{max}} f_s(X_i) g_s(Y_j) \\pi(s) ds     .   $$","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/IntegrateRandomVectorsProduct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integral outer product of random vectors — IntegrateRandomVectorsProduct","text":"","code":"## Define the integrand f_fct <- function(s, x) {     sapply(X = x, FUN = sampleComplexCFMoment, t = s, theta = theta) } f_bar_fct <- function(s, x) Conj(f_fct(s, x))  ## Function specific arguments theta <- c(1.5, 0.5, 1, 0) set.seed(345) X <- rstable(3, 1.5, 0.5, 1, 0) s_min <- 0; s_max <- 2 numberIntegrationPoints <- 10 randomIntegrationLaw <- \"norm\"  Estim_Simpson <-     IntegrateRandomVectorsProduct(f_fct, X, f_bar_fct, X, s_min, s_max,                                    numberIntegrationPoints,                                    \"Simpson\", randomIntegrationLaw) Estim_Simpson #>                       [,1]                  [,2]                  [,3] #> [1,] 0.18350577+0.0000000i 0.18998639+0.0282428i 0.08004621-0.1248522i #> [2,] 0.18998639-0.0282428i 0.20150135+0.0000000i 0.06272407-0.1402916i #> [3,] 0.08004621+0.1248522i 0.06272407+0.1402916i 0.12578873+0.0000000i"},{"path":"https://geobosh.github.io/StableEstim/reference/KoutParamsEstim.html","id":null,"dir":"Reference","previous_headings":"","what":"Iterative Koutrouvelis regression method — KoutParametersEstim","title":"Iterative Koutrouvelis regression method — KoutParametersEstim","text":"Iterative Koutrouvelis regression method different   spacing schemes (points eCF computed).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/KoutParamsEstim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Iterative Koutrouvelis regression method — KoutParametersEstim","text":"","code":"KoutParametersEstim(x, theta0 = NULL,                     spacing = c(\"Kout\", \"UniformSpac\", \"ArithSpac\", \"free\"),                     pm = 0, tol = 0.05, NbIter = 10, PrintTime = FALSE, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/KoutParamsEstim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Iterative Koutrouvelis regression method — KoutParametersEstim","text":"x data used perform estimation: vector length n. theta0 initial guess 4 parameters values: vector length 4 spacing scheme used select points moment conditions     evaluated. Kout scheme suggested Koutrouvelis,     UniformSpac ArithSpac uniform     arithmetic spacing schemes informative interval     [\\(\\epsilon\\),\\(A_n\\)]. user choose free, needs provide     set points t_points u_points .... pm parametrisation, integer (0 1); default: pm = 0     (Nolan's ‘S0’ parametrisation). tol loop stops relative error two consecutive     estimation smaller tol; default = 0.05. NbIter maximum number iteration. loop stops NbIter     reached; default = 10. PrintTime logical flag; set TRUE, estimation duration printed     screen readable format (h/min/sec). ... arguments pass function. See Details.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/KoutParamsEstim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Iterative Koutrouvelis regression method — KoutParametersEstim","text":"spacing 4 options spacing scheme implemented described   . particular: UniformSpac, ArithSpac: user can specify number points choose       regression inputting nb_t nb_u. Otherwise       Koutrouvelis table used compte . free: user expected provide t_points       u_points otherwise Kout scheme used.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/KoutParamsEstim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Iterative Koutrouvelis regression method — KoutParametersEstim","text":"list following elements: Estim list containing vector 4 parameters estimate     (par), 2 regressions objects (reg1     reg2) matrix iterations estimate (vals). duration estimation duration numerical format. method character describing method used.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/KoutParamsEstim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Iterative Koutrouvelis regression method — KoutParametersEstim","text":"Koutrouvelis IA (1980). “Regression-type estimation parameters stable laws.” Journal American Statistical Association, 75(372), pp. 918–928. Koutrouvelis IA (1981). “iterative procedure estimation parameters stable laws: iterative procedure estimation.” Communications Statistics-Simulation Computation, 10(1), pp. 17–28.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/KoutParamsEstim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Iterative Koutrouvelis regression method — KoutParametersEstim","text":"","code":"pm <- 0 theta <- c(1.45, 0.5, 1.1, 0.4) set.seed(1235) x <- rstable(200, theta[1], theta[2], theta[3], theta[4], pm = pm) theta0 <- theta - 0.1 spacing <- \"Kout\"  KoutParametersEstim(x = x, theta0 = theta0,                          spacing = spacing, pm = pm) #> $Estim #> $Estim$par #> [1] 1.3344151 0.4676414 1.0085928 0.6678007 #>  #> $Estim$regObject1 #> $Estim$regObject1$alpha #> [1] 1.334415 #>  #> $Estim$regObject1$gamma #> [1] 1.008593 #>  #> $Estim$regObject1$obj #> $coefficients #> (Intercept)           w  #>   0.7088417   1.3344151  #>  #> $residuals #>  [1] -0.05787720  0.04029226 -0.07402443 -0.03429568  0.05751061  0.06609260 #>  [7]  0.02759895  0.01291000  0.06764385  0.07514438 -0.04056695 -0.09603401 #> [13] -0.05689624 -0.09900973 -0.18281535 -0.20263143 -0.23564454 -0.27082373 #> [19] -0.33518429 -0.41815004 -0.34564423 #>  #> $effects #>  (Intercept)            w                                                      #>  -2.88909651 -12.75249112  -0.03718116  -1.04345420  -0.36569028  -0.17901914  #>                                                                                #>  -0.72032817  -0.44130671   0.04961527   0.99193952  -0.63024592  -0.49598630  #>                                                                                #>   0.69735376  -1.80494979   1.31693622   1.74037573  -1.35024588   0.72165765  #>                                         #>  -0.24167200   0.45964172  -0.07459873  #>  #> $rank #> [1] 2 #>  #> $fitted.values #>  [1] -2.05892986 -1.13398383 -0.59292508 -0.20903779  0.08872832  0.33202096 #>  [7]  0.53772194  0.71590824  0.87307970  1.01367436  1.14085770  1.25696699 #> [13]  1.36377719  1.46266798  1.55473311  1.64085428  1.72175269  1.79802574 #> [19]  1.87017385  1.93862040  2.00372673 #>  #> $assign #> NULL #>  #> $qr #> $qr #>         (Intercept)             w #>  [1,] -9.558134e+00  2.912218e+00 #>  [2,] -7.396163e-01 -9.556615e+00 #>  [3,]  4.586215e-01 -8.569227e-01 #>  [4,] -2.265525e-01 -4.769813e-01 #>  [5,] -1.974310e-01 -2.727447e-02 #>  [6,]  5.561188e-02 -1.062211e-01 #>  [7,] -1.598650e-02 -8.328343e-02 #>  [8,]  1.983991e-02  2.173686e-02 #>  [9,] -1.252809e-02  1.661564e-03 #> [10,] -3.035077e-03  1.179246e-02 #> [11,]  3.476299e-04 -7.863231e-03 #> [12,] -1.014034e-03 -5.110691e-03 #> [13,]  6.466102e-04  1.996900e-03 #> [14,] -3.170199e-04 -7.325344e-04 #> [15,]  7.200185e-05  2.244465e-04 #> [16,]  6.891658e-07 -1.169513e-04 #> [17,] -9.251990e-06  8.004342e-05 #> [18,] -3.525780e-06  4.940021e-05 #> [19,]  4.625320e-07 -2.360839e-05 #> [20,] -1.199750e-07 -8.561639e-06 #> [21,]  5.921626e-08  2.143827e-06 #>  #> $qraux #> [1] 1.385252 1.136024 #>  #> $pivot #> [1] 1 2 #>  #> $tol #> [1] 1e-07 #>  #> $rank #> [1] 2 #>  #> attr(,\"class\") #> [1] \"qr\" #>  #> $df.residual #> [1] 19 #>  #> $terms #> y ~ w #> attr(,\"variables\") #> list(y, w) #> attr(,\"factors\") #>   w #> y 0 #> w 1 #> attr(,\"term.labels\") #> [1] \"w\" #> attr(,\"order\") #> [1] 1 #> attr(,\"intercept\") #> [1] 1 #> attr(,\"response\") #> [1] 1 #> attr(,\".Environment\") #> <environment: 0x55b71aa88420> #> attr(,\"predvars\") #> list(y, w) #> attr(,\"dataClasses\") #>         y         w  #> \"numeric\" \"numeric\"  #>  #> $call #> lm.gls(formula = y ~ w, W = sig, inverse = TRUE) #>  #> $xlevels #> named list() #>  #> attr(,\"class\") #> [1] \"lm.gls\" #>  #> $Estim$regObject1$updatedData #>   [1]  -0.626933424  -0.722570038  -2.383259156   2.403082886   0.993929693 #>   [6]  -1.179618588  -0.823781073   0.342432858  -0.544732252  -2.636008744 #>  [11]   3.006516247  -0.494420604  -1.131950271  -0.260840472   0.319892188 #>  [16]  -8.871491763   1.612402224  -0.383010903  -0.067098228   1.280735952 #>  [21]  -2.418525878   4.357222048   1.351933392  -1.111651724  -2.381504635 #>  [26]   1.230201551  -1.838725853  -0.840261119  -2.849381002  -0.681011824 #>  [31]  -0.105437015  -0.988982776   0.164135986  -0.425440079  -2.109310242 #>  [36]  -0.421339197  -1.355627428  -2.592407493  -0.284291044  -1.075824274 #>  [41]  -0.924269723   2.930037067  -3.587158102  -1.192462096   3.076546141 #>  [46]   2.026704817  -1.805413153  -0.848286649  -0.021069395  -1.778134358 #>  [51]  -1.831695318  -1.348231297  -1.258149400  -2.313893859  -0.860540285 #>  [56]  -0.040732426  -2.030051766   1.200154039  -0.495555913  -2.535110841 #>  [61]  -0.830010838  -0.773541122  -2.292878431  -0.089297603  13.373256152 #>  [66]  -0.810038048  -1.962963696   2.235511791   2.161293706  -3.536976857 #>  [71]   1.778112999  -0.568805990   0.005438781  -2.294454376  -0.908567864 #>  [76]   1.534477240  -7.130534721  -0.944800156   2.919490321  -3.529773840 #>  [81]  -0.557014475   0.181842975  -2.999932316  -1.579776309  -0.345316355 #>  [86]   0.644682788  -0.854012470   1.165438366  -2.764356968  -1.487143921 #>  [91]  -0.633522156  -3.495262901  -1.893289735  -1.175698406  -0.184887331 #>  [96]  -1.270711831   0.135692892   0.280685554 115.160789010  -0.344421118 #> [101]  -0.271014960   1.038545633  -5.639841670  -0.095688616  -0.511490911 #> [106]  -1.611364715  -0.743067270   2.464408490   4.604983727  -4.116897352 #> [111]   3.923263909  -2.178734707  -0.250667027  -1.606707628  -1.301101620 #> [116]  -1.283885028  -1.504903136   2.803195437  -1.606649302   7.159408263 #> [121]   0.928531765  -0.200074912  -0.706378788   3.430007742  -0.937316767 #> [126]  -0.868270444  -3.312635562  -1.636513940   0.075269659  -0.611841973 #> [131]   0.247478644   1.425506684  -3.261735414   0.333644252   1.057669745 #> [136]   0.357680615  -2.308920534  -1.019030988  -1.277398464  -2.164374185 #> [141]  -0.510920464  -0.149071819  -0.082272347  -0.106027976  -1.286002082 #> [146]   6.011522834   0.901826329  -2.509077140  -1.708738376 -13.184319957 #> [151]  -0.124998067  -1.501454459  -1.454259201   0.743984706  -2.212461930 #> [156]  -1.261411484  -1.596635311  -0.628765150  -1.226249012  -1.105750477 #> [161]  -0.327003174   3.751433032   1.416651709  -0.566832174   0.011391106 #> [166]  -0.626765893  -0.290205685   0.281344241  -3.353261333  -0.051925272 #> [171]   0.657999833  -1.038381031  -0.014177686   0.767003357   0.886416745 #> [176]  -1.159231571   0.840368069  -2.836240756  -3.635908314  -0.095890406 #> [181]  -3.479619778  -1.336547594  -0.555365153  -1.964800649  -0.097427363 #> [186]  -2.441086333  -0.465432481   1.914286202   0.350360387  -0.428384672 #> [191]   1.774025059   1.127742215  -1.553577895  -0.151862620  12.068249607 #> [196]  -1.680149738  11.823836616  -1.205903417  -1.719171620   3.172317401 #>  #>  #> $Estim$regObject2 #> $Estim$regObject2$beta #> [1] 0.4676414 #>  #> $Estim$regObject2$delta #> [1] 0.6678007 #>  #> $Estim$regObject2$obj #> $coefficients #>           u          Om  #> -0.02991856 -0.80680953  #>  #> $residuals #>  [1] -0.0003928949  0.0013324999 -0.0032343258 -0.0113183750 -0.0138728714 #>  [6] -0.0044447134  0.0144084290  0.0326832941  0.0391892862  0.0287596496 #> [11]  0.0075947863 -0.0097960422 -0.0131611042 #>  #> $effects #>           u          Om                                                  #> -6.14625911  2.35525590  1.62845436 -0.09577137 -1.46623619  0.26650545  #>                                                                          #> -0.12977734 -0.15814915  0.16767628  0.20991726 -0.19669805 -0.17729849  #>              #> -0.15574861  #>  #> $rank #> [1] 2 #>  #> $fitted.values #>  [1] -0.02197281 -0.05442877 -0.09268012 -0.13529322 -0.18149101 -0.23077213 #>  [7] -0.28278109 -0.33725019 -0.39396921 -0.45276787 -0.51350491 -0.57606088 #> [13] -0.64033324 #>  #> $assign #> NULL #>  #> $qr #> $qr #>                   u          Om #>  [1,]  9.0864682745  7.28103091 #>  [2,]  0.1347664608 -2.91922173 #>  [3,]  0.1473166164  0.29669835 #>  [4,] -0.0020693168 -0.37701712 #>  [5,]  0.0526670375  0.15972862 #>  [6,]  0.0055423598 -0.21230884 #>  [7,]  0.0244398529  0.10568262 #>  [8,]  0.0005303477 -0.12716215 #>  [9,]  0.0089739577  0.09016390 #> [10,]  0.0042369355  0.09035207 #> [11,] -0.0041972146 -0.08227781 #> [12,] -0.0033774937 -0.07550927 #> [13,] -0.0026543150 -0.06679224 #>  #> $qraux #> [1] 1.978057 1.799172 #>  #> $pivot #> [1] 1 2 #>  #> $tol #> [1] 1e-07 #>  #> $rank #> [1] 2 #>  #> attr(,\"class\") #> [1] \"qr\" #>  #> $df.residual #> [1] 11 #>  #> $terms #> z ~ -1 + u + Om #> attr(,\"variables\") #> list(z, u, Om) #> attr(,\"factors\") #>    u Om #> z  0  0 #> u  1  0 #> Om 0  1 #> attr(,\"term.labels\") #> [1] \"u\"  \"Om\" #> attr(,\"order\") #> [1] 1 1 #> attr(,\"intercept\") #> [1] 0 #> attr(,\"response\") #> [1] 1 #> attr(,\".Environment\") #> <environment: 0x55b71a778730> #> attr(,\"predvars\") #> list(z, u, Om) #> attr(,\"dataClasses\") #>         z         u        Om  #> \"numeric\" \"numeric\" \"numeric\"  #>  #> $call #> lm.gls(formula = z ~ -1 + u + Om, W = sig2, inverse = TRUE) #>  #> $xlevels #> named list() #>  #> attr(,\"class\") #> [1] \"lm.gls\" #>  #> $Estim$regObject2$updatedData #>   [1]  -0.597014868  -0.692651483  -2.353340601   2.433001442   1.023848248 #>   [6]  -1.149700033  -0.793862517   0.372351413  -0.514813697  -2.606090188 #>  [11]   3.036434803  -0.464502048  -1.102031716  -0.230921916   0.349810743 #>  [16]  -8.841573208   1.642320780  -0.353092348  -0.037179672   1.310654508 #>  [21]  -2.388607322   4.387140603   1.381851948  -1.081733168  -2.351586079 #>  [26]   1.260120107  -1.808807297  -0.810342563  -2.819462446  -0.651093268 #>  [31]  -0.075518460  -0.959064220   0.194054542  -0.395521523  -2.079391686 #>  [36]  -0.391420641  -1.325708872  -2.562488937  -0.254372488  -1.045905719 #>  [41]  -0.894351168   2.959955623  -3.557239547  -1.162543541   3.106464696 #>  [46]   2.056623373  -1.775494597  -0.818368093   0.008849161  -1.748215802 #>  [51]  -1.801776763  -1.318312741  -1.228230844  -2.283975303  -0.830621729 #>  [56]  -0.010813870  -2.000133210   1.230072594  -0.465637358  -2.505192285 #>  [61]  -0.800092282  -0.743622566  -2.262959875  -0.059379047  13.403174708 #>  [66]  -0.780119493  -1.933045140   2.265430346   2.191212262  -3.507058302 #>  [71]   1.808031555  -0.538887434   0.035357337  -2.264535820  -0.878649308 #>  [76]   1.564395796  -7.100616165  -0.914881600   2.949408877  -3.499855285 #>  [81]  -0.527095919   0.211761531  -2.970013760  -1.549857753  -0.315397799 #>  [86]   0.674601344  -0.824093914   1.195356922  -2.734438413  -1.457225366 #>  [91]  -0.603603600  -3.465344345  -1.863371180  -1.145779851  -0.154968775 #>  [96]  -1.240793275   0.165611448   0.310604109 115.190707565  -0.314502562 #> [101]  -0.241096404   1.068464189  -5.609923114  -0.065770060  -0.481572356 #> [106]  -1.581446160  -0.713148714   2.494327045   4.634902283  -4.086978796 #> [111]   3.953182465  -2.148816152  -0.220748472  -1.576789072  -1.271183064 #> [116]  -1.253966473  -1.474984581   2.833113993  -1.576730746   7.189326819 #> [121]   0.958450321  -0.170156357  -0.676460232   3.459926298  -0.907398211 #> [126]  -0.838351888  -3.282717007  -1.606595384   0.105188214  -0.581923418 #> [131]   0.277397200   1.455425240  -3.231816858   0.363562807   1.087588300 #> [136]   0.387599171  -2.279001978  -0.989112432  -1.247479908  -2.134455629 #> [141]  -0.481001908  -0.119153264  -0.052353791  -0.076109421  -1.256083526 #> [146]   6.041441390   0.931744885  -2.479158585  -1.678819820 -13.154401401 #> [151]  -0.095079511  -1.471535903  -1.424340646   0.773903261  -2.182543375 #> [156]  -1.231492928  -1.566716755  -0.598846594  -1.196330457  -1.075831921 #> [161]  -0.297084618   3.781351587   1.446570265  -0.536913619   0.041309662 #> [166]  -0.596847338  -0.260287130   0.311262797  -3.323342777  -0.022006717 #> [171]   0.687918388  -1.008462475   0.015740870   0.796921912   0.916335300 #> [176]  -1.129313015   0.870286625  -2.806322200  -3.605989758  -0.065971851 #> [181]  -3.449701222  -1.306629038  -0.525446598  -1.934882094  -0.067508807 #> [186]  -2.411167777  -0.435513925   1.944204757   0.380278943  -0.398466116 #> [191]   1.803943615   1.157660771  -1.523659339  -0.121944064  12.098168163 #> [196]  -1.650231182  11.853755171  -1.175984861  -1.689253064   3.202235956 #>  #>  #> $Estim$vals #>          [,1]      [,2]      [,3]      [,4] #> [1,] 1.350000 0.4000000 1.0000000 0.3000000 #> [2,] 1.254499 0.5118235 0.9543142 0.9918242 #> [3,] 1.311907 0.4495955 0.9967998 0.6979764 #> [4,] 1.334415 0.4676414 1.0085928 0.6678007 #>  #>  #> $duration #> elapsed  #>   0.297  #>  #> $method #> [1] \"Koutrouvelis_spacing=Kout\" #>"},{"path":"https://geobosh.github.io/StableEstim/reference/MLParametersEstim.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum likelihood (ML) method — MLParametersEstim","title":"Maximum likelihood (ML) method — MLParametersEstim","text":"Uses numerical ML approach described Nolan estimate 4   parameters stable law. method may slow large sample size   due use numerical optimisation routine.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/MLParametersEstim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum likelihood (ML) method — MLParametersEstim","text":"","code":"MLParametersEstim(x, theta0 = NULL, pm = 0, PrintTime = FALSE, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/MLParametersEstim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum likelihood (ML) method — MLParametersEstim","text":"x data used perform estimation: vector length n. theta0 initial guess 4 parameters values: NULL,     Kogon-McCulloch method called, see IGParametersEstim;     vector length 4. pm parametrisation, integer (0 1); default: pm=0     (Nolan's ‘S0’ parametrisation). PrintTime logical flag; set TRUE, estimation duration printed     screen readable format (h/min/sec). ... argument passed optimisation function.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/MLParametersEstim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximum likelihood (ML) method — MLParametersEstim","text":"function performs minimisation numerical (-)log-density   stable laws computed function dstable package   stabledist. testing several optimisation routines, found   \"L-BFGS-B\" algorithm performs better ML method   (faster, accurate).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/MLParametersEstim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum likelihood (ML) method — MLParametersEstim","text":"list following elements: Estim output optimisation function, duration estimation duration numerical format, method character describing method used.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/MLParametersEstim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Maximum likelihood (ML) method — MLParametersEstim","text":"Nolan J (2001). “Maximum likelihood estimation diagnostics stable distributions.” L'evy processes: theory applications, pp. 379–400.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/MLParametersEstim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum likelihood (ML) method — MLParametersEstim","text":"","code":"theta <- c(1.5, 0.4, 1, 0) pm <- 0 ## 50 points does not give accurate estimation ## but it makes estimation fast for installation purposes ## use at least 200 points to get decent results. set.seed(1333) x <- rstable(50, theta[1], theta[2], theta[3], theta[4], pm)  ## This example takes > 30 sec hence commented out if (FALSE) { # \\dontrun{   ML <- MLParametersEstim(x = x, pm = pm, PrintTime = TRUE) } # } ## see the Examples folder for more examples."},{"path":"https://geobosh.github.io/StableEstim/reference/McCullochParametersEstim.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile-based method — McCullochParametersEstim","title":"Quantile-based method — McCullochParametersEstim","text":"McCulloch quantile-based method.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/McCullochParametersEstim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile-based method — McCullochParametersEstim","text":"","code":"McCullochParametersEstim(x)"},{"path":"https://geobosh.github.io/StableEstim/reference/McCullochParametersEstim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile-based method — McCullochParametersEstim","text":"x data used perform estimation: vector length n.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/McCullochParametersEstim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantile-based method — McCullochParametersEstim","text":"code modified version function .qStableFit   package fBasics.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/McCullochParametersEstim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile-based method — McCullochParametersEstim","text":"numeric length 4, represening value 4   parameters.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/McCullochParametersEstim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quantile-based method — McCullochParametersEstim","text":"McCulloch JH (1986). “Simple consistent estimators stable distribution parameters.” Communications Statistics-Simulation Computation, 15(4), pp. 1109–1136.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/McCullochParametersEstim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile-based method — McCullochParametersEstim","text":"","code":"set.seed(333) x <- rstable(500, 1.3, 0.4, 1, 0) McCullochParametersEstim(x) #>     alpha      beta     gamma     delta  #> 1.2280000 0.3910000 0.9498760 0.0353745"},{"path":"https://geobosh.github.io/StableEstim/reference/PrintDuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Print duration — PrintDuration","title":"Print duration — PrintDuration","text":"Print duration human readable format.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/PrintDuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print duration — PrintDuration","text":"","code":"PrintDuration(t, CallingFct = \"\")"},{"path":"https://geobosh.github.io/StableEstim/reference/PrintDuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print duration — PrintDuration","text":"t Duration; numeric length 1 3. CallingFct Name calling function.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/PrintDuration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print duration — PrintDuration","text":"duration printed format: hours/minutes/seconds.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/PrintDuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print duration — PrintDuration","text":"Prints character screen.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/PrintDuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print duration — PrintDuration","text":"","code":"ti <- getTime_() for (i in 1:100) x = i*22.1 tf <- getTime_() duration <- ComputeDuration(ti, tf) PrintDuration(duration, \"test\") #> [1] \"test :duration= 0  h, 0  min, 0  sec. \""},{"path":"https://geobosh.github.io/StableEstim/reference/PrintEstimatedRemainingTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimated remaining time — PrintEstimatedRemainingTime","title":"Estimated remaining time — PrintEstimatedRemainingTime","text":"Prints estimated remaining time loop.   Useful Monte Carlo simulations.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/PrintEstimatedRemainingTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimated remaining time — PrintEstimatedRemainingTime","text":"","code":"PrintEstimatedRemainingTime(ActualIter, ActualIterStartTime, TotalIterNbr)"},{"path":"https://geobosh.github.io/StableEstim/reference/PrintEstimatedRemainingTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimated remaining time — PrintEstimatedRemainingTime","text":"ActualIter Actual Iteration; integer ActualIterStartTime Actual Iteration Starting time; numeric TotalIterNbr Total number iterations; integer","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/PrintEstimatedRemainingTime.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimated remaining time — PrintEstimatedRemainingTime","text":"Called end Monte Carlo step, function compute   duration actual step, estimate remaining MC loops   duration prints result screen human readable   format using function PrintDuration.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/RegularisedSol.html","id":null,"dir":"Reference","previous_headings":"","what":"Regularised Inverse — RegularisedSol","title":"Regularised Inverse — RegularisedSol","text":"Regularised solution (ill-posed) problem \\(K\\phi = r\\)   \\(K\\) \\(n \\times n\\) matrix, \\(r\\) given vector   length n. Users can choose one 3 schemes described   Carrasco Florens (2007).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/RegularisedSol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regularised Inverse — RegularisedSol","text":"","code":"RegularisedSol(Kn, alphaReg, r,                regularization = c(\"Tikhonov\", \"LF\", \"cut-off\"),                ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/RegularisedSol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Regularised Inverse — RegularisedSol","text":"Kn numeric \\(n \\times n\\) matrix. alphaReg regularisation parameter; numeric ]0,1]. r numeric vector length n. regularization regularization scheme used, one \"Tikhonov\" (Tikhonov     scheme), \"LF\" (Landweber-Fridmann) \"cut-\"     (spectral cut-). See Details. ... value \\(c\\) used \"LF\" scheme. See     Carrasco Florens(2007).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/RegularisedSol.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regularised Inverse — RegularisedSol","text":"Following Carrasco Florens(2007), regularised solution   problem \\(K \\phi=r\\) given :   $$\\varphi_{\\alpha_{reg}} =     \\sum_{j=1}^{n} q(\\alpha_{reg},\\mu_j)\\frac{<r,\\psi_j >}{\\mu_j} \\phi_j     ,   $$   \\(q\\) (positive) real function regularity   conditions \\(\\mu,\\phi,\\psi\\) singular decomposition   matrix \\(K\\). regularization parameter defines form function   \\(q\\). example, \"Tikhonov\" scheme defines   \\(q(\\alpha_{reg},\\mu) = \\frac{\\mu^2}{\\alpha_{reg}+\\mu^2}\\). matrix \\(K\\) symmetric, singular decomposition   replaced spectral decomposition.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/RegularisedSol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Regularised Inverse — RegularisedSol","text":"regularised solution, vector length n.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/RegularisedSol.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regularised Inverse — RegularisedSol","text":"Carrasco M, Florens J Renault E (2007). “Linear inverse problems structural econometrics estimation based spectral decomposition regularization.” Handbook econometrics, 6, pp. 5633–5751.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/RegularisedSol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regularised Inverse — RegularisedSol","text":"","code":"## Adapted from R examples for Solve  ## We compare the result of the regularized sol to the expected solution  hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, \"+\")}  K_h8 <- hilbert(8); r8 <- 1:8  alphaReg_robust <- 1e-4 Sa8_robust <- RegularisedSol(K_h8,alphaReg_robust,r8,\"LF\")  alphaReg_accurate <- 1e-10 Sa8_accurate <- RegularisedSol(K_h8,alphaReg_accurate,r8,\"LF\")  ## when pre multiplied by K_h8, the expected solution is 1:8 ## User can check the influence of the choice of alphaReg"},{"path":"https://geobosh.github.io/StableEstim/reference/StableEstim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Stable law estimation functions — StableEstim-package","title":"Stable law estimation functions — StableEstim-package","text":"collection methods estimate four parameters stable   laws. package also provides functions compute   characteristic function tools run Monte Carlo simulations.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/StableEstim-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stable law estimation functions — StableEstim-package","text":"main functions package briefly described : main function: Estim useful       function package. estimates parameters       asymptotic properties estimators. estimation function: methods provided far maximum-likelihood       (MLParametersEstim), generalised method       moment finite (GMMParametersEstim)       continuum (CgmmParametersEstim) moment conditions,       iterative Koutrouvelis regression method       (KoutParametersEstim) fast Kogon-McCulloch       method used first guess estimation       (IGParametersEstim). characteristic function: characteristic function       (ComplexCF)       Jacobian (jacobianComplexCF)       can computed return vector (respectively matrix)       complex numbers. Monte Carlo simulation Estim_Simulation tool run Monte Carlo       simulations flexible options select estimation method,       Monte Carlo control parameters, compute statistical summaries       save results file.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/StableEstim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Stable law estimation functions — StableEstim-package","text":"Tarak Kharrat, Georgi N. Boshnakov","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/StableEstim-package.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Stable law estimation functions — StableEstim-package","text":"Version 1 package somewhat restricted license since   needed package akima computations. version 2 package implemented 2D interpolation routine   removed dependency akima.  Therefore,   StableEstim now GPL license.  package related   upcoming work authors different methods compared   using MC simulations.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/StableEstim-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stable law estimation functions — StableEstim-package","text":"Carrasco M Florens J (2000). “Generalization GMM continuum moment conditions.” Econometric Theory, 16(06), pp. 797–834. Carrasco M Florens J (2002). “Efficient GMM estimation using empirical characteristic function.” IDEI Working Paper, 140. Carrasco M Florens J (2003). “asymptotic efficiency GMM.” IDEI Working Paper, 173. Carrasco M, Chernov M, Florens J Ghysels E (2007). “Efficient estimation general dynamic models continuum moment conditions.” Journal Econometrics, 140(2), pp. 529–573. Carrasco M, Florens J Renault E (2007). “Linear inverse problems structural econometrics estimation based spectral decomposition regularization.” Handbook econometrics, 6, pp. 5633–5751. Carrasco M Kotchoni R (2010). “Efficient estimation using characteristic function.” Mimeo. University Montreal. Nolan J (2001). “Maximum likelihood estimation diagnostics stable distributions.” L'evy processes: theory applications, pp. 379–400. nolan:2012StableEstim Hansen LP (1982). “Large sample properties generalized method moments estimators.” Econometrica: Journal Econometric Society, pp. 1029–1054. Hansen LP, Heaton J Yaron (1996). “Finite-sample properties alternative GMM estimators.” Journal Business & Economic Statistics, 14(3), pp. 262–280. Feuerverger McDunnough P (1981). “efficient inference symmetric stable laws processes.” Statistics Related Topics, 99, pp. 109–112. Feuerverger McDunnough P (1981). “Fourier methods inference.” Journal American Statistical Association, 76(374), pp. 379–387. Schmidt P (1982). “improved version Quandt-Ramsey MGF estimator mixtures normal distributions switching regressions.” Econometrica: Journal Econometric Society, pp. 501–516. Besbeas P Morgan B (2008). “Improved estimation stable laws.” Statistics Computing, 18(2), pp. 219–231.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/StableEstim_reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — StableEstim_reexports","title":"Objects exported from other packages — StableEstim_reexports","text":"objects imported packages. Follow links   see documentation.  rstable rstable","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/StatFcts.html","id":null,"dir":"Reference","previous_headings":"","what":"Default functions used to produce the statistical summary — StatFcts","title":"Default functions used to produce the statistical summary — StatFcts","text":"Default functions used produce statistical summary   Monte Carlo simulations.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/StatFcts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default functions used to produce the statistical summary — StatFcts","text":"functions : Mean .mean <- function(p,...) mean(p) Min .min <- function(p,...) min(p) Max .max <- function(p,...) max(p) Sn .Sn <- function(p,n,...) sqrt(n)*sd(p) MSE .MSE <- function(p,paramT,...) (1/length(p))*sum((p-paramT)^2) Std error .st.err <- function(p,...) sd(p)/sqrt(length(p)) change statistical summary, provide functions similar   signatures pass character vector containing function   names Estim_Simulation.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/TexSummary.html","id":null,"dir":"Reference","previous_headings":"","what":"LaTeX summary — TexSummary","title":"LaTeX summary — TexSummary","text":"Creates TeX table summary object vector files.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/TexSummary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LaTeX summary — TexSummary","text":"","code":"TexSummary(obj, files = NULL, sep_ = \",\", FctsToApply = StatFcts,            caption = \"Statistical Summary\", label = \"Simtab\",            digits = 3, par_index = 1, MCparam = 1000, ...)"},{"path":"https://geobosh.github.io/StableEstim/reference/TexSummary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LaTeX summary — TexSummary","text":"obj list length 4 containing summary matrix     object associated parameter identical one produced     function ComputeStatObjectFromFiles. files character vector containing files name parsed.     passed function ComputeStatObjectFromFiles. sep_ field separator character passed function     ComputeStatObjectFromFiles. FctsToApply functions used produce statistical summary passed     function ComputeStatObjectFromFiles. caption character vector length equal length(par_index)     containing table's caption title. label character vector length equal length(par_index)     containing LaTeX label. digits numeric vector length equal one (case     replicated necessary) number columns     resulting table length FctsToApply matrix     size resulting table indicating number digits     display corresponding columns. See xtable. par_index numeric character vector length 1, 2, 3 4     desired indices selected obj. See Details. MCparam number Monte Carlo simulations couple parameters,     default = 1000; integer. ... arguments passed function     ComputeStatObjectFromFiles.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/TexSummary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"LaTeX summary — TexSummary","text":"Accepted values par_index c(1,2,3,4)   c(\"alpha\",\"beta\",\"gamma\",\"delta\") mixed. examples provided example folder.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/TexSummary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LaTeX summary — TexSummary","text":"list length length(par_index) whose elements   objects class Latex (produced toLatex)","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/expect_almost_equal.html","id":null,"dir":"Reference","previous_headings":"","what":"Test approximate equality — expect_almost_equal","title":"Test approximate equality — expect_almost_equal","text":"Tests approximate equality 2 objects. Useful running tests.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/expect_almost_equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test approximate equality — expect_almost_equal","text":"","code":"expect_almost_equal(x, y, tolExpect = 0.001)"},{"path":"https://geobosh.github.io/StableEstim/reference/expect_almost_equal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test approximate equality — expect_almost_equal","text":"x first object. y second object. tolExpect tolerance, default 0.001.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/expect_almost_equal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test approximate equality — expect_almost_equal","text":"function works expect_that function package   testhat test equality 2 objects given   tolerance. used particularly testing functions output. See   CF examples Examples folder.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/expect_almost_equal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test approximate equality — expect_almost_equal","text":"","code":"x <- 1.1 y <- 1.5 expect_almost_equal(x, y, 1)      # passes #> <expectation_success/expectation/condition> #> As expected ## expect_almost_equal(x, y, 0.3) # fails"},{"path":"https://geobosh.github.io/StableEstim/reference/get.StatFcts.html","id":null,"dir":"Reference","previous_headings":"","what":"Default functions used to produce the statistical summary — get.StatFcts","title":"Default functions used to produce the statistical summary — get.StatFcts","text":"Default functions used produce statistical summary   Monte Carlo simulations.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/get.StatFcts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default functions used to produce the statistical summary — get.StatFcts","text":"","code":"get.StatFcts()"},{"path":"https://geobosh.github.io/StableEstim/reference/get.StatFcts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default functions used to produce the statistical summary — get.StatFcts","text":"functions computed : Mean .mean <- function(p,...) mean(p) Min .min <- function(p,...) min(p) Max .max <- function(p,...) max(p) Sn .Sn <- function(p,n,...) sqrt(n)*sd(p) MSE .MSE <- function(p,paramT,...) (1/length(p))*sum((p-paramT)^2) Std error .st.err <- function(p,...) sd(p)/sqrt(length(p)) Users can define summaries defining functions   similar signatures passing character vector containing   functions' names Estim_Simulation.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/get.abMat.html","id":null,"dir":"Reference","previous_headings":"","what":"Default set of parameters to pass to Estim_Simulation — get.abMat","title":"Default set of parameters to pass to Estim_Simulation — get.abMat","text":"Default set parameters pass Estim_Simulation,   inspired one used Koutrevelis (1980) simulation   procedure.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/get.abMat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default set of parameters to pass to Estim_Simulation — get.abMat","text":"","code":"get.abMat()"},{"path":"https://geobosh.github.io/StableEstim/reference/get.abMat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default set of parameters to pass to Estim_Simulation — get.abMat","text":"2-columns matrix containing wide range parameters \\(\\alpha\\)   \\(\\beta\\) covering entire parameters space.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/getTime_.html","id":null,"dir":"Reference","previous_headings":"","what":"Read time — getTime_","title":"Read time — getTime_","text":"Reads time function called.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/getTime_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read time — getTime_","text":"","code":"getTime_()"},{"path":"https://geobosh.github.io/StableEstim/reference/getTime_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read time — getTime_","text":"numeric.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/getTime_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read time — getTime_","text":"","code":"ti <- getTime_()"},{"path":"https://geobosh.github.io/StableEstim/reference/jacobianComplexCF.html","id":null,"dir":"Reference","previous_headings":"","what":"Jacobian of the characteristic function of stable laws — jacobianComplexCF","title":"Jacobian of the characteristic function of stable laws — jacobianComplexCF","text":"Numeric jacobian  characteristic function (CF) function   parameter \\(\\theta\\) evaluated specific (vector) point   t given value \\(\\theta\\).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/jacobianComplexCF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jacobian of the characteristic function of stable laws — jacobianComplexCF","text":"","code":"jacobianComplexCF(t, theta, pm = 0)"},{"path":"https://geobosh.github.io/StableEstim/reference/jacobianComplexCF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jacobian of the characteristic function of stable laws — jacobianComplexCF","text":"t vector (real) numbers jacobian CF evaluated;     numeric. theta vector parameters stable law; vector length 4. pm parametrisation, integer (0 1); default: pm = 0     (Nolan's ‘S0’ parametrisation).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/jacobianComplexCF.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jacobian of the characteristic function of stable laws — jacobianComplexCF","text":"numerical derivation obtained call function   jacobian package numDeriv. set   arguments default user given option modify   .","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/jacobianComplexCF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jacobian of the characteristic function of stable laws — jacobianComplexCF","text":"matrix length(t) \\(\\times \\) 4 complex numbers.","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/jacobianComplexCF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jacobian of the characteristic function of stable laws — jacobianComplexCF","text":"","code":"## define the parameters nt <- 10 t <- seq(0.1, 3, length.out = nt) theta <- c(1.5, 0.5, 1, 0) pm <- 0  ## Compute the jacobian of the characteristic function jack_CF <- jacobianComplexCF(t = t, theta = theta, pm = pm)"},{"path":"https://geobosh.github.io/StableEstim/reference/sampleComplexCFMoment.html","id":null,"dir":"Reference","previous_headings":"","what":"Complex moment condition based on the characteristic function — sampleComplexCFMoment","title":"Complex moment condition based on the characteristic function — sampleComplexCFMoment","text":"Computes moment condition based characteristic function   complex vector.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/sampleComplexCFMoment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complex moment condition based on the characteristic function — sampleComplexCFMoment","text":"","code":"sampleComplexCFMoment(x, t, theta, pm = 0)"},{"path":"https://geobosh.github.io/StableEstim/reference/sampleComplexCFMoment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complex moment condition based on the characteristic function — sampleComplexCFMoment","text":"x vector data ecf computed. t vector (real) numbers CF evaluated; numeric. theta vector parameters stable law; vector length 4. pm parametrisation, integer (0 1); default: pm=0     (Nolan's ‘S0’ parametrisation).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/sampleComplexCFMoment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Complex moment condition based on the characteristic function — sampleComplexCFMoment","text":"moment conditions moment conditions given :   $$g_t(X,\\theta) = g(t,X;\\theta)= e^{itX} - \\phi_{\\theta}(t)$$   one sample \\(x_1,\\dots,x_n\\) ..d realisations   random variable \\(X\\), :   $$\\hat{g}_n(t,\\theta)     = \\frac{1}{n}\\sum_{=1}^n g(t,x_i;\\theta)     =  \\phi_n(t) - \\phi_\\theta(t)     ,   $$   \\(\\phi_n(t)\\) eCF associated sample   \\(x_1,\\dots,x_n\\), defined   \\(\\phi_n(t) = \\frac{1}{n} \\sum_{j=1}^n e^{itX_j}\\). function compute vector difference eCF   CF set given point t.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/sampleComplexCFMoment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complex moment condition based on the characteristic function — sampleComplexCFMoment","text":"complex vector length(t).","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/sampleComplexCFMoment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complex moment condition based on the characteristic function — sampleComplexCFMoment","text":"","code":"## define the parameters nt <- 10    t <- seq(0.1, 3, length.out = nt) theta <- c(1.5, 0.5, 1, 0) pm <- 0  set.seed(222) x <- rstable(200, theta[1], theta[2], theta[3], theta[4], pm)  ## Compute the characteristic function CFMC <- sampleComplexCFMoment(x = x, t = t, theta = theta, pm = pm) CFMC #>  [1]  0.006242431-0.004761586i -0.020703369+0.057950623i #>  [3] -0.072449040+0.064189392i -0.050660290+0.051092006i #>  [5] -0.040969284+0.022624526i -0.028959753+0.036014037i #>  [7] -0.029889636+0.060445754i -0.015320422+0.058259580i #>  [9] -0.032306259+0.050194423i -0.017038430-0.014834322i"},{"path":"https://geobosh.github.io/StableEstim/reference/sampleRealCFMoment.html","id":null,"dir":"Reference","previous_headings":"","what":"Real moment condition based on the characteristic function — sampleRealCFMoment","title":"Real moment condition based on the characteristic function — sampleRealCFMoment","text":"Computes moment condition based characteristic function   real vector.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/sampleRealCFMoment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Real moment condition based on the characteristic function — sampleRealCFMoment","text":"","code":"sampleRealCFMoment(x, t, theta, pm = 0)"},{"path":"https://geobosh.github.io/StableEstim/reference/sampleRealCFMoment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Real moment condition based on the characteristic function — sampleRealCFMoment","text":"x vector data ecf computed. t vector (real) numbers CF evaluated; numeric. theta vector parameters stable law; vector length 4. pm Parametrisation, integer (0 1); default: pm=0     (Nolan's ‘S0’ parametrisation).","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/sampleRealCFMoment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Real moment condition based on the characteristic function — sampleRealCFMoment","text":"moment conditions moment conditions given :   $$g_t(X,\\theta)     = g(t,X;\\theta)     = e^{itX} - \\phi_{\\theta}(t)     .   $$   one sample \\(x_1,\\dots,x_n\\) ..d realisations   random variable \\(X\\), :   $$\\hat{g}_n(t,\\theta)     = \\frac{1}{n}\\sum_{=1}^n g(t,x_i;\\theta)     = \\phi_n(t) -\\phi_\\theta(t)     ,   $$   \\(\\phi_n(t)\\) eCF associated sample   \\(x_1,\\dots,x_n\\), defined   \\(\\phi_n(t) = \\frac{1}{n} \\sum_{j=1}^n e^{itX_j}\\). function compute vector difference eCF   CF set given point t.  length(t) = n,   resulting vector length = 2n, first   n components real part remaining   imaginary part.","code":""},{"path":"https://geobosh.github.io/StableEstim/reference/sampleRealCFMoment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Real moment condition based on the characteristic function — sampleRealCFMoment","text":"vector length 2 * length(t).","code":""},{"path":[]},{"path":"https://geobosh.github.io/StableEstim/reference/sampleRealCFMoment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Real moment condition based on the characteristic function — sampleRealCFMoment","text":"","code":"## define the parameters nt <- 10    t <- seq(0.1, 3, length.out = nt) theta <- c(1.5, 0.5, 1, 0) pm <- 0  set.seed(222) x <- rstable(200, theta[1], theta[2], theta[3], theta[4], pm)  # Compute the characteristic function CFMR <- sampleRealCFMoment(x = x, t = t, theta = theta, pm = pm) CFMR #>  [1]  0.006242431 -0.020703369 -0.072449040 -0.050660290 -0.040969284 #>  [6] -0.028959753 -0.029889636 -0.015320422 -0.032306259 -0.017038430 #> [11] -0.004761586  0.057950623  0.064189392  0.051092006  0.022624526 #> [16]  0.036014037  0.060445754  0.058259580  0.050194423 -0.014834322"},{"path":"https://geobosh.github.io/StableEstim/news/index.html","id":"stableestim-239000","dir":"Changelog","previous_headings":"","what":"StableEstim 2.3.9000","title":"StableEstim 2.3.9000","text":"Now RelativeErr (used condition terminate loop) ComputeITGMMParametersEstim()ComputeCueGMMParametersEstim() (called GMMParametersEstim() algo = \"ITGMM\" \"CueGMM\") remains scalar second subsequent iterations loop. Previously becoming vector second iteration , throwing error giving warning recent versions R. Thanks Cedric Juessen reported diagnosed . (fixes #1)","code":""},{"path":"https://geobosh.github.io/StableEstim/news/index.html","id":"stableestim-23","dir":"Changelog","previous_headings":"","what":"StableEstim 2.3","title":"StableEstim 2.3","text":"CRAN release: 2024-10-24 fixed minor documentation issue causing NOTE CRAN.","code":""},{"path":"https://geobosh.github.io/StableEstim/news/index.html","id":"stableestim-22","dir":"Changelog","previous_headings":"","what":"StableEstim 2.2","title":"StableEstim 2.2","text":"CRAN release: 2022-08-07 fixed ‘Escaped LaTeX specials’ NOTEs CRAN. updated DESCRIPTION, documentation github site. created pkgdown website.","code":""}]
